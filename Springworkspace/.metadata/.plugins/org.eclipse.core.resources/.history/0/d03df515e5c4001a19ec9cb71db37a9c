package common;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.json.simple.JSONObject;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import net.nurigo.java_sdk.api.Message;
import net.nurigo.java_sdk.exceptions.CoolsmsException;

@Service
public class CommonService {
	
	//첨부파일업로드처리
	public String upload(String category, MultipartFile file, HttpSession session) {
		//서버의 업로드할 물리적 위치
		//workspace/.metadata/....../wtpwebapps/iot/resources
		String resources = session.getServletContext().getRealPath("resources");
		String upload = resources + "/images/";
		
		
		//업로드할 파일의 형태: .../upload/notice/2020/07/13/abc.txt
		String folder;
		if(category.equals("member")) {
			folder = upload + "/" + category + "/";
		} else {
			folder = upload + "/"+ category + "/"
					+ new SimpleDateFormat("yyyy/MM/dd").format(new Date());
		}
		//폴더가 없다면 폴더를 생성
		File f = new File(folder);
		if( !f.exists() ) f.mkdirs();
		
		//동시다발적 동일명의 파일업로드를 위한 고유ID 부여: afd324adfa_abc.txt
		String uuid = UUID.randomUUID().toString() 
						+ "_" + file.getOriginalFilename();
		
		try {
			file.transferTo( new File(folder, uuid));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
		// /upload/ .../ afafd_abc.txt
		// folder.replace(resources, "")
		return folder.substring(resources.length()) + "/" + uuid;
	}
	
	//SMS 전송
	public int sendSms(String m_telin, String randomNum) {
		int succ = -100;
		
		JSONObject obj = null;
		String api_key = "NCSH7PJQL6DZNESC";
	    String api_secret = "IVCP6BVIKLJOBHNLXINHHHUVODJGBSNT";
	    Message coolsms = new Message(api_key, api_secret);
	    
	    // 4 params(to, from, type, text) are mandatory. must be filled
	    HashMap<String, String> params = new HashMap<String, String>();
	    params.put("to", m_telin);
	    params.put("from", "01099287824");
	    params.put("type", "SMS");
	    params.put("text", "펫과함께 인증번호는 [" + randomNum + "]입니다.");
	    params.put("app_version", "펫과함께 1.0.0"); // application name and version

	    try {
	      obj = (JSONObject) coolsms.send(params);
	      System.out.println(obj.toString());
	      
	      String success_count = obj.get("success_count").toString();
	      String error_count = obj.get("error_count").toString();
	      System.out.println("succ:" + success_count + "err : " + error_count);
	      
	      if(success_count.equals("1")) {
	    	  succ = 1;
	      }
	      
	    } catch (CoolsmsException e) {
	      System.out.println(e.getMessage());
	      System.out.println(e.getCode());
	    }
	    
	    return succ;
	}
}
